# This file is autogenerated by maturin v1.7.0
# To update, run
#
#    maturin generate-ci -m Cargo.toml github
#
name: CI

on:
  push:
    # branches:
    #  - main
    #  - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        _:
          - runs_on: ubuntu-latest
            target: x86_64
            name: x86_64-unknown-linux-gnu
            manylinux: 'auto'

          #- runs_on: ubuntu-latest
          #  target: aarch64
          #  name: aarch64-unknown-linux-gnu
          #  manylinux: '2_28'

          #- runs_on: macos-latest
          #  target: x86_64
          #  name: x86_64-apple-darwin

          #- runs_on: macos-latest
          #  target: aarch64
          #  name: aarch64-apple-darwin

          #- runs_on: windows-latest
          #  target: x64
          #  name: x86_64-pc-windows-msvc

    runs-on: ${{ matrix._.runs_on }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          architecture: ${{ matrix._.runs_on == 'windows-latest' && 'x64' || null }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix._.target }}
          command: build
          args: --release --out dist --find-interpreter --manifest-path Cargo.toml
          sccache: "true"
          manylinux: ${{ matrix._.manylinux }}
          before-script-linux: |
            if command -v yum &> /dev/null; then
                yum update -y && yum install -y perl-core openssl openssl-devel pkgconfig libatomic
            else
                # If we're running on debian-based system.
                apt update -y && apt-get install -y libssl-dev openssl pkg-config
            fi

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix._.name }}
          path: dist
          if-no-files-found: error
  
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
